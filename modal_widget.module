<?php

/**
 * @file
 * Contains modal_widget.module.
 */

use Drupal\Core\Ajax\AjaxResponse;
use Drupal\Core\Ajax\CloseModalDialogCommand;
use Drupal\Core\Form\FormStateInterface;
use Drupal\Core\Routing\RouteMatchInterface;

/**
 * Implements hook_help().
 */
function modal_widget_help($route_name, RouteMatchInterface $route_match) {
  switch ($route_name) {
    // Main module help for the modal_widget module.
    case 'help.page.modal_widget':
      $output = '';
      $output .= '<h3>' . t('About') . '</h3>';
      $output .= '<p>' . t('Provides a field widget for modal management of referenced entities.') . '</p>';
      return $output;

    default:
  }
}

/**
 * Implements hook_form_alter().
 *
 * Ajaxifies forms opened in modals.
 */
function modal_widget_form_alter(&$form, FormStateInterface $form_state, $form_id) {
  if (isset($form_state->getUserInput()['_drupal_ajax']) && $form_state->getUserInput()['_drupal_ajax'] == 1) {
    $form['actions']['submit']['#ajax'] = [
      'event' => 'click',
      'callback' => 'closeModal',
    ];
  }
}

/**
 * Closes modal.
 *
 * @param array $form
 * @param \FormStateInterface $form_state
 *
 * @return \AjaxResponse
 */
function closeModal(array $form, FormStateInterface $form_state) {
  $response = new AjaxResponse();
  $response->addCommand(new CloseModalDialogCommand());

  return $response;
}

/**
 * Implements hook_entity_type_alter().
 *
 * Alters the entity definition and adds our own form handlers.
 */
function modal_widget_entity_type_alter(array &$entity_types) {
  $form_modes = \Drupal::service('entity_display.repository')
    ->getAllFormModes();

  foreach ($form_modes as $entity_type => $display_modes) {
    $type = $entity_types[$entity_type];

    foreach ($display_modes as $machine_name => $form_display) {
      $default_handler_class = $type->getHandlerClasses()['form']['default'];
      $type->setFormClass($machine_name, $default_handler_class);
    }
  }
}
